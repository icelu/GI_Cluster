INTRODUCTION
-------------
GI-Cluster is a program for detecting genomic islands in newly sequenced microbial genomes by consensus clustering on multiple features.
It includes a sets of scripts for extracting GI-related features from a newly sequenced microbial genome,
performing consensus clustering on the obtained feature matrix to get potential GIs,
and visualizing the predictions.

Author: Bingxin Lu
Affiliation : National University of Singapore
E-mail : bingxin@comp.nus.edu.sg


SYSTEM REQUIREMENTS
------------------
GI-Cluster uses bash scripts to connect each step.
So it is not convenient to run on Windows system.


SOFTWARE REQUIREMENTS
--------------------
There are several external tools and packages that GI-Cluster depends on.

########## Prebuilt database ##########
# PFAM (ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz)
# RFAM (ftp://ftp.ebi.ac.uk/pub/databases/Rfam/CURRENT/Rfam.tar.gz)
# PHAST (http://phast.wishartlab.com/phage_finder/DB/prophage_virus.db)
# VFDB (http://www.mgc.ac.cn/VFs/download.htm)
# CARD (https://card.mcmaster.ca/download)
# COG (https://www.ncbi.nlm.nih.gov/COG/)


########## External tools ##########
# Prodigal  -- gene prediction
# Blast -- database search
# Hmmmer -- database search
# Circos -- visualization
# tRNAscan-SE -- tRNA prediction
# Infernal cmscan  -- ncRNA prediction
# Repseek -- repeat detection


########## Python packages to install ##########
scipy  -- for chisquare

########## R packages to install ##########
install.packages("R.utils")

install.packages("mclust")
install.packages("cluster")
install.packages("apcluster")
install.packages("LICORS")
install.packages("kernlab")
install.packages("clues")

install.packages("reshape2")
install.packages("ggplot2")

# optional
install.packages("NbClust")
install.packages("clustertend")
install.packages("factoextra")


INSTALLATION
------------
Uncompress the distribution GI_Cluster


TO RUN
-------
The programs can be called by following commands:
# Run on complete genome with gene predictions
gnome=BtribCIP105476
organism=NC_010161
pred_prog=prodigal
seg_prog=window
output_dir=/home/b/bingxin/genome/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 > std_"$seg_prog"_"$pred_prog" 2>&1 &


# Run on complete genome without gene predictions
gnome=BtribCIP105476
organism=NC_010161
pred_prog=none
seg_prog=window
output_dir=/home/b/bingxin/genome/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 -t 0 > std_"$seg_prog"_"$pred_prog"_unannotated 2>&1 &


# Run on draft genome with gene predictions
gnome=Vibrio_cholerae_RC9_uid55789
organism=NZ_ACHX00000000
pred_prog=prodigal
seg_prog=window
# pred_prog=ncbi
output_dir=/home/b/bingxin/genome/draft/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 -b 1 > std_"$seg_prog"_"$pred_prog" 2>&1 &


# Run on draft genome without gene predictions
gnome=Vibrio_cholerae_RC9_uid55789
organism=NZ_ACHX00000000
pred_prog=none
seg_prog=window
output_dir=/home/b/bingxin/genome/draft/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 -b 1 -t 0 > std_"$seg_prog"_"$pred_prog"_unannotated 2>&1 &


INPUT FILE
-----------
FASTA file (ended by '.fna', e.g. NC_010161.fna)


OUTPUT FILE
-----------
There are multiple folders and files generated by the program.
1. Folder $pred_prog
2. Folder $seg_prog
3. Folder $boundary -- files containing predicted tRNAs and repeats in a genome
  File $organism.pred_trna
  File $organism.trna_pred
  File $organism.trna_stat
  File $organism.repseek
