INTRODUCTION
-------------
GI-Cluster is a program for detecting genomic islands (GIs) in a genome by consensus clustering on multiple features.
It includes a sets of scripts for extracting GI-related features from a genome sequence,
performing consensus clustering on the obtained feature matrix to get potential GIs,
and visualizing the predictions.

Author: Bingxin Lu
Affiliation : National University of Singapore
E-mail : bingxin@comp.nus.edu.sg


CITATION
--------------------------------
Lu, B. and Leong, H. W. (2017). GI-Cluster: detecting genomic islands via consensus clustering on multiple features. In preparation.


Content of GI-Cluster program
--------------------------------
 clustering -- scripts to perform clustering
 evalution -- data and script for evaluating different GI prediction tools
 feature -- scripts to extract GI-related features
 postprocess -- scripts for postprocessing
 segmentation -- scripts to segment large genome sequences into short intervals
 util -- scripts of general usage
 visualization -- scripts for visualizing predictions

 Gene_Prediction.sh -- scripts for predicting genes from genome sequences
 GI_Clustering.R -- scripts for running Consensus Clustering on genomic regions with extracted GI-related features
 GI_Comparison.sh -- scripts for visualizing predictions from different methods
 GI_Feature.sh -- scripts for extracting features related to genomic islands in the unit of genes
 GI_Segmentation.sh -- scripts for splitting a genome sequence into a set of segments
 GI-Cluster.sh  -- the main program
 Segment_Feature.sh -- scripts for extracting features related to genomic islands in a genomic region

 README -- this file.


SYSTEM REQUIREMENTS
------------------
Unix-based systems

Since GI-Cluster uses bash scripts to connect each step, it is not convenient to run the program on Windows system.


SOFTWARE REQUIREMENTS
--------------------
There are several external tools and packages that GI-Cluster depends on.

########## Prebuilt database ##########
PFAM (ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz)
RFAM (ftp://ftp.ebi.ac.uk/pub/databases/Rfam/CURRENT/Rfam.tar.gz)
PHAST (http://phast.wishartlab.com/phage_finder/DB/prophage_virus.db)
VFDB (http://www.mgc.ac.cn/VFs/download.htm)
CARD (https://card.mcmaster.ca/download)
COG (https://www.ncbi.nlm.nih.gov/COG/)


########## External tools ##########
Prodigal  -- gene prediction
CodonW -- codon analysis
Blast -- database search
Hmmmer -- database search
Circos -- visualization
tRNAscan-SE -- tRNA prediction
Infernal cmscan  -- ncRNA prediction
Repseek -- repeat detection


########## Python packages to install ##########
scipy  -- for chisquare

########## R packages to install ##########
Required R packages will installed automatically

INSTALLATION
------------
Uncompress the distribution GI_Cluster
Install required tools and packages


TO RUN
-------
The programs can be called by following commands:
Note: Suppose the input files are in $output_dir, the names of the input file should be $organism.fna ($organism.faa, $organism.ffn)

# Run on complete genome with gene predictions
gnome=BtribCIP105476
organism=NC_010161
pred_prog=prodigal
seg_prog=window
output_dir=/home/b/bingxin/genome/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 > std_"$seg_prog"_"$pred_prog" 2>&1 &


# Run on complete genome without gene predictions
gnome=BtribCIP105476
organism=NC_010161
pred_prog=none
seg_prog=window
output_dir=/home/b/bingxin/genome/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 -t 0 > std_"$seg_prog"_"$pred_prog"_unannotated 2>&1 &


# Run on incomplete genome with gene predictions
gnome=Vibrio_cholerae_RC9_uid55789
organism=NZ_ACHX00000000
pred_prog=prodigal
seg_prog=window
output_dir=/home/b/bingxin/genome/incomplete/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 -b 1 > std_"$seg_prog"_"$pred_prog" 2>&1 &


# Run on incomplete genome without gene predictions
gnome=Vibrio_cholerae_RC9_uid55789
organism=NZ_ACHX00000000
pred_prog=none
seg_prog=window
output_dir=/home/b/bingxin/genome/incomplete/$gnome
prog_dir=/home/b/bingxin/GI-Cluster
nohup /usr/bin/time sh $prog_dir/GI-Cluster.sh -s $prog_dir -o $output_dir -n $organism -m $seg_prog -p $pred_prog -d 16 -b 1 -t 0 > std_"$seg_prog"_"$pred_prog"_unannotated 2>&1 &

When using the old NCBI annotation files, please use option ""-p ncbi_old", namely pred_prog=ncbi_old.


INPUT FILE
-----------
FASTA file (ended by '.fna', e.g. NC_010161.fna)


When using annotation files from NCBI,

The required NCBI files include:
$organism.fna, genomic DNA sequence,
$organism.ffn, gene sequence -- used for analyzing sequence composition,
$organism.faa, protein sequence -- used for analyzing gene function

The required old NCBI files include:
$organism_genomic.fna, genomic DNA sequence,
$organism_cds_from_genomic.fna, gene sequence -- used for analyzing sequence composition,
$organism_protein.faa, protein sequence -- used for analyzing gene function



OUTPUT FILE
-----------
There are multiple folders and files generated by the program.
1. Folder $pred_prog -- folders containing gene predictions, gene features and predictions of genomic islands
2. Folder $seg_prog -- folders containing segmentation results and segment features
3. Folder boundary -- files containing predicted tRNAs and repeats in a genome

  The predictions of genomic islands depend on several parameters, including pFeature, feature, method, and rep.

  Suppose:
  pFeature=1
  feature=comp_content
  method=average
  rep=1

  When running gene prediction,
  the directory including the final GI candidates is $output_dir/$pred_prog/$seg_prog/$feature/$method/$pFeature/$rep.

  When not running gene prediction,
  the directory including the final GI candidates is $output_dir/unannotated/$seg_prog/$feature/$method/$pFeature/$rep.

  The file name including the final GI candidates is merged_"$organism"_refined_GI.
